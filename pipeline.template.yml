Description: cfn-certificate-provider pipeline
Parameters: 
  GithubAccessToken:
    Type: String
    NoEcho: true
    Description: OAuth token for GitHub
  GithubUsername:
    Type: String
    Description: Github username containing the project's repository
    Default: kfodex01
  GithubRepository:
    Type: String
    Description: Github repository where the project is located
    Default: cfn-certificate-provider
  GithubBranch: 
    Type: String
    Description: Github branch to track
    Default: master
Conditions:
  InUsEast1:
    !Equals 
      - !Ref AWS::Region
      - us-east-1
Resources:
  ArtifactStore:
    Type: AWS::S3::Bucket
  ArtifactStorePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactStore
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: s3:*
            Resource:
              - !Sub arn:aws:s3:::${ArtifactStore}
              - !Sub arn:aws:s3:::${ArtifactStore}/*
            Principal:
              AWS: !ImportValue ProductService-Pipeline-PipelineRoleARN
  ArtifactKey: #Needed to allow Dev/Qual/Prod to decrypt artifacts in the Shared account's ArtifactStore
    Type: AWS::KMS::Key
    Properties:
      Description: Key used for encrypting artifacts
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - kms:*
            Resource: "*"
            Principal:
              AWS: !ImportValue ProductService-Pipeline-PipelineRoleARN
  ArtifactKeyAlias:
    Type: AWS::KMS::Alias
    Properties: 
      TargetKeyId: !Ref ArtifactKey
      AliasName: alias/cfn-certificate-provider-artifacts
  BuildProject:
    Type: AWS::CodeBuild::Project
    Condition: InUsEast1
    Properties:
      Name: !Sub ${AWS::StackName}-build
      ServiceRole: !ImportValue ProductService-Pipeline-PipelineRoleARN
      EncryptionKey: !GetAtt ArtifactKey.Arn
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_CUSTOM_CACHE
          - LOCAL_DOCKER_LAYER_CACHE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: ARTIFACT_STORE
            Value: !Ref ArtifactStore
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Condition: InUsEast1
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GithubAccessToken
      Filters:
        - JsonPath: $.ref
          MatchEquals: "refs/heads/{Branch}"
      TargetPipeline: !Ref Pipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Condition: InUsEast1
    Properties:
      Name: !Ref AWS::StackName
      ArtifactStores:
        - Region: us-east-1
          ArtifactStore:
            Type: S3
            Location: !Ref ArtifactStore
            EncryptionKey:
              Id: !Sub arn:aws:kms:us-east-1:${AWS::AccountId}:alias/cfn-certificate-provider-artifacts
              Type: KMS
      RoleArn: !ImportValue ProductService-Pipeline-PipelineRoleARN
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Provider: GitHub
                Owner: ThirdParty
                Version: 1
              OutputArtifacts:
                - Name: sourceCode
              Configuration:
                Owner: !Ref GithubUsername
                Repo: !Ref GithubRepository
                Branch: !Ref GithubBranch
                OAuthToken: !Ref GithubAccessToken
                PollForSourceChanges: false
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: sourceCode
              OutputArtifacts:
                - Name: buildResults
              Configuration:
                ProjectName: !Ref BuildProject
        - Name: Deploy_Dev
          Actions:
            - Name: UsEast1
              RoleArn: !ImportValue ProductService-Pipeline-PipelineRoleARN
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: buildResults
              Configuration:
                StackName: CfnCertificateProvider
                ActionMode: CREATE_UPDATE
                TemplatePath: buildResults::cloudformation.template.yml
                RoleArn: !ImportValue ProductService-Pipeline-PipelineRoleARN
                Capabilities: CAPABILITY_IAM
              RunOrder: 1
        - Name: Deploy_Prod
          Actions:
            - Name: UsEast1
              RoleArn: !ImportValue ProductService-Pipeline-PipelineRoleARN
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: buildResults
              Configuration:
                StackName: CfnCertificateProvider
                ActionMode: CREATE_UPDATE
                TemplatePath: buildResults::cloudformation.template.yml
                RoleArn: !ImportValue ProductService-Pipeline-PipelineRoleARN
                Capabilities: CAPABILITY_IAM
              RunOrder: 2
